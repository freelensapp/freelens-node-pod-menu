name: Release

on:
  push:
    tags:
      - v*

permissions:
  contents: write
  id-token: write

jobs:
  release:
    name: release on ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            ref: main

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout plugin
        uses: actions/checkout@v4

      - name: Check if package version matches
        run: test "${GITHUB_REF_NAME}" = "v$(jq -r .version package.json)"

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Get npm cache directory
        run: echo "npm_cache_dir=$(npm config get cache)" >> ${GITHUB_ENV}

      - name: Use cache
        uses: actions/cache@v4
        with:
          path: ${{ env.npm_cache_dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies for plugin
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 3
          retry_on: error
          command: npm ci

      - name: Build plugin
        run: npm run build

      - name: Publish NPM packages
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 3
          retry_on: error
          command: |
            case "${GITHUB_REF_NAME}" in
              *-*) dist_tag=next;;
              *) dist_tag=latest;;
            esac
            npm publish --tag ${dist_tag}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          files: |
            *.tgz
